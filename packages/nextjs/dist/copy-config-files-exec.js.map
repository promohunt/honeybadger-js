{"version":3,"file":"copy-config-files-exec.js","sources":["../../build/copy-config-files.js","../../build/copy-config-files-exec.js"],"sourcesContent":["const path = require('path');\nconst fs = require('fs');\nconst debug = process.env.HONEYBADGER_DEBUG === 'true';\nfunction usesTypescript() {\n    return fs.existsSync('tsconfig.json');\n}\nfunction usesSrcFolder() {\n    return fs.existsSync('src');\n}\nfunction usesPagesRouter(isUnderSrc) {\n    const srcFolder = isUnderSrc ? 'src' : '';\n    return fs.existsSync(path.join(srcFolder, 'pages'));\n}\nfunction usesAppRouter(isUnderSrc) {\n    const srcFolder = isUnderSrc ? 'src' : '';\n    return fs.existsSync(path.join(srcFolder, 'app'));\n}\nfunction getTargetPath(isUnderSrc, isAppRouter = false, isGlobalErrorComponent = false) {\n    if (!isAppRouter && isGlobalErrorComponent) {\n        throw new Error('invalid arguments: isGlobalErrorComponent can only be true when isAppRouter is true');\n    }\n    const extension = usesTypescript() ? 'tsx' : 'js';\n    let srcFolder = isUnderSrc ? 'src' : '';\n    srcFolder = path.join(srcFolder, isAppRouter ? 'app' : 'pages');\n    let fileName = '';\n    if (isAppRouter) {\n        fileName = isGlobalErrorComponent ? 'global-error' : 'error';\n    }\n    else {\n        fileName = '_error';\n    }\n    return path.join(srcFolder, fileName + '.' + extension);\n}\nfunction getTemplate(isAppRouter = false, isGlobalErrorComponent = false) {\n    if (!isAppRouter && isGlobalErrorComponent) {\n        throw new Error('invalid arguments: isGlobalErrorComponent can only be true when isAppRouter is true');\n    }\n    const extension = isGlobalErrorComponent ? 'tsx' : 'js';\n    const templateName = isAppRouter ? '_error_app_router' : '_error';\n    return path.resolve(__dirname, '../templates', templateName + '.' + extension);\n}\nasync function copyErrorJs(isUnderSrc, isAppRouter = false) {\n    const sourcePath = getTemplate(isAppRouter);\n    const targetPath = getTargetPath(isUnderSrc, isAppRouter);\n    return copyFileWithBackup(sourcePath, targetPath);\n}\nfunction copyGlobalErrorJs(isUnderSrc) {\n    const sourcePath = getTemplate(true, true);\n    const targetPath = getTargetPath(isUnderSrc, true, true);\n    return copyFileWithBackup(sourcePath, targetPath);\n}\nasync function copyFileWithBackup(sourcePath, targetPath) {\n    const fileAlreadyExists = fs.existsSync(targetPath);\n    if (fileAlreadyExists) {\n        // Don't overwrite an existing file without creating a backup first\n        const backupPath = targetPath + '.bak';\n        if (debug) {\n            console.debug('backing up', targetPath, 'to', backupPath);\n        }\n        await fs.promises.copyFile(targetPath, backupPath);\n    }\n    if (debug) {\n        console.debug('copying', sourcePath, 'to', targetPath);\n    }\n    return fs.promises.copyFile(sourcePath, targetPath);\n}\nexport async function copyConfigFiles() {\n    if (debug) {\n        console.debug('cwd', process.cwd());\n    }\n    const templateDir = path.resolve(__dirname, '../templates');\n    const configFiles = [\n        'honeybadger.browser.config.js',\n        'honeybadger.edge.config.js',\n        'honeybadger.server.config.js',\n    ];\n    const copyPromises = configFiles.map((file) => {\n        if (debug) {\n            console.debug('copying', file);\n        }\n        return fs.promises.copyFile(path.join(templateDir, file), file);\n    });\n    const isUnderSrcFolder = usesSrcFolder();\n    if (usesPagesRouter(isUnderSrcFolder)) {\n        copyPromises.push(copyErrorJs(isUnderSrcFolder, false));\n    }\n    if (usesAppRouter(isUnderSrcFolder)) {\n        copyPromises.push(copyErrorJs(isUnderSrcFolder, true));\n        copyPromises.push(copyGlobalErrorJs(isUnderSrcFolder));\n    }\n    await Promise.all(copyPromises);\n    console.log('Done copying config files.');\n}\n//# sourceMappingURL=copy-config-files.js.map","\"use strict\";\nconst { copyConfigFiles } = require('./copy-config-files');\ncopyConfigFiles().catch((err) => {\n    console.error(err);\n    process.exit(1);\n});\n//# sourceMappingURL=copy-config-files-exec.js.map"],"names":["copyConfigFiles"],"mappings":"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"}