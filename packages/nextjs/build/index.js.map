{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport HoneybadgerSourceMapPlugin from '@honeybadger-io/webpack'\nimport type { WebpackConfigContext } from 'next/dist/server/config-shared'\nimport { HoneybadgerNextJsConfig, NextJsRuntime, HoneybadgerWebpackPluginOptions } from './types'\n\nconst URL_DOCS_SOURCE_MAPS_UPLOAD = 'https://docs.honeybadger.io/lib/javascript/integration/nextjs/#source-map-upload-and-tracking-deploys'\nlet _silent = true\nfunction log(type: 'error' | 'warn' | 'debug', msg: string): void {\n  if (['error', 'warn'].includes(type) || !_silent) {\n    console[type]('[HoneybadgerNextJs]', msg)\n  }\n}\n\nfunction shouldUploadSourceMaps(honeybadgerNextJsConfig: HoneybadgerNextJsConfig, context: WebpackConfigContext): boolean {\n  const { dev } = context\n\n  if (honeybadgerNextJsConfig.disableSourceMapUpload) {\n    return false\n  }\n\n  if (!honeybadgerNextJsConfig.webpackPluginOptions || !honeybadgerNextJsConfig.webpackPluginOptions.apiKey) {\n    log('warn', `skipping source map upload; here's how to enable: ${URL_DOCS_SOURCE_MAPS_UPLOAD}`)\n    return false\n  }\n\n  if (dev || process.env.NODE_ENV === 'development') {\n    return false\n  }\n\n  return true\n}\n\nfunction mergeWithExistingWebpackConfig(nextJsWebpackConfig, honeybadgerNextJsConfig: HoneybadgerNextJsConfig) {\n  return function webpackFunctionMergedWithHb(webpackConfig, context: WebpackConfigContext) {\n\n    const { isServer, dir: projectDir, nextRuntime } = context\n    const configType = isServer ? (nextRuntime === 'edge' ? 'edge' : 'server') : 'browser'\n    log('debug', `reached webpackFunctionMergedWithHb isServer[${isServer}] configType[${configType}]`)\n\n    let result = { ...webpackConfig }\n    if (typeof nextJsWebpackConfig === 'function') {\n      result = nextJsWebpackConfig(result, context)\n    }\n\n    const originalEntry = result.entry\n    result.entry = async () => injectHoneybadgerConfigToEntry(originalEntry, projectDir, configType)\n\n    if (shouldUploadSourceMaps(honeybadgerNextJsConfig, context)) {\n      // `result.devtool` must be 'hidden-source-map' or 'source-map' to properly pass sourcemaps.\n      // Next.js uses regular `source-map` which doesnt pass its sourcemaps to Webpack.\n      // https://github.com/vercel/next.js/blob/89ec21ed686dd79a5770b5c669abaff8f55d8fef/packages/next/build/webpack/config/blocks/base.ts#L40\n      // Use the hidden-source-map option when you don't want the source maps to be\n      // publicly available on the servers, only to the error reporting\n      result.devtool = 'hidden-source-map'\n      if (!result.plugins) {\n        result.plugins = []\n      }\n      const options = getWebpackPluginOptions(honeybadgerNextJsConfig)\n      if (options) {\n        result.plugins.push(new HoneybadgerSourceMapPlugin(options))\n      }\n    }\n\n    return result\n  }\n}\n\nasync function injectHoneybadgerConfigToEntry(originalEntry, projectDir: string, configType: NextJsRuntime) {\n  const hbConfigFile = getHoneybadgerConfigFile(projectDir, configType)\n  if (!hbConfigFile) {\n    return originalEntry\n  }\n\n  const hbConfigFileRelativePath = `./${hbConfigFile}`\n  const result = typeof originalEntry === 'function' ? await originalEntry() : { ...originalEntry }\n  if (!Object.keys(result).length) {\n    log('debug', `no entry points for configType[${configType}]`)\n  }\n  for (const entryName in result) {\n    addHoneybadgerConfigToEntry(result, entryName, hbConfigFileRelativePath, configType)\n  }\n\n  return result\n}\n\nfunction addHoneybadgerConfigToEntry(entry, entryName: string, hbConfigFile: string, configType: NextJsRuntime) {\n\n  log('debug', `adding entry[${entryName}] to configType[${configType}]`)\n\n  switch (configType) {\n  case 'server':\n    if (!entryName.startsWith('pages/')) {\n      return\n    }\n\n    break\n  case 'browser':\n    if (!['pages/_app', 'main-app'].includes(entryName)) {\n      return\n    }\n\n    break\n  case 'edge':\n    // nothing?\n\n    break\n  }\n\n  const currentEntryPoint = entry[entryName]\n  let newEntryPoint = currentEntryPoint\n\n  if (typeof currentEntryPoint === 'string') {\n    newEntryPoint = [hbConfigFile, currentEntryPoint]\n  } else if (Array.isArray(currentEntryPoint)) {\n    newEntryPoint = [hbConfigFile, ...currentEntryPoint]\n  } // descriptor object (webpack 5+)\n  else if (typeof currentEntryPoint === 'object' && currentEntryPoint && 'import' in currentEntryPoint) {\n    const currentImportValue = currentEntryPoint['import']\n    const newImportValue = [hbConfigFile]\n    if (typeof currentImportValue === 'string') {\n      newImportValue.push(currentImportValue)\n    } else {\n      newImportValue.push(...(currentImportValue))\n    }\n    newEntryPoint = {\n      ...currentEntryPoint,\n      import: newImportValue,\n    };\n  } else {\n    log('error', 'Could not inject Honeybadger config to entry point: ' + JSON.stringify(currentEntryPoint, null, 2))\n  }\n\n  entry[entryName] = newEntryPoint\n}\n\nfunction getHoneybadgerConfigFile(projectDir: string, configType: NextJsRuntime): string | null {\n  const possibilities = [`honeybadger.${configType}.config.ts`, `honeybadger.${configType}.config.js`]\n\n  for (const filename of possibilities) {\n    if (fs.existsSync(path.resolve(projectDir, filename))) {\n      return filename;\n    }\n  }\n\n  log('debug', `could not find config file in ${projectDir} for ${configType}`)\n  return null\n}\n\nfunction getWebpackPluginOptions(honeybadgerNextJsConfig: HoneybadgerNextJsConfig): HoneybadgerWebpackPluginOptions | null {\n  const apiKey = honeybadgerNextJsConfig.webpackPluginOptions?.apiKey || process.env.NEXT_PUBLIC_HONEYBADGER_API_KEY\n  const assetsUrl = honeybadgerNextJsConfig.webpackPluginOptions?.assetsUrl || process.env.NEXT_PUBLIC_HONEYBADGER_ASSETS_URL\n  if (!apiKey || !assetsUrl) {\n    log('error', 'Missing Honeybadger required configuration for webpack plugin. Source maps will not be uploaded to Honeybadger.')\n\n    return null\n  }\n\n  return {\n    ...honeybadgerNextJsConfig.webpackPluginOptions,\n    apiKey,\n    assetsUrl,\n    revision: honeybadgerNextJsConfig.webpackPluginOptions?.revision || process.env.NEXT_PUBLIC_HONEYBADGER_REVISION,\n    silent: _silent,\n  }\n}\n\nexport function setupHoneybadger(config, honeybadgerNextJsConfig?: HoneybadgerNextJsConfig) {\n  if (!honeybadgerNextJsConfig) {\n    honeybadgerNextJsConfig = {\n      silent: true,\n      disableSourceMapUpload: false,\n    }\n  }\n\n  _silent = honeybadgerNextJsConfig.silent ?? true\n\n  return {\n    ...config,\n    webpack: mergeWithExistingWebpackConfig(config.webpack, honeybadgerNextJsConfig)\n  }\n}\n"]}